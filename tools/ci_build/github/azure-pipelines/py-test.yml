jobs:
- job: Manylinux1_py_Wheels
  pool: AI-Linux-CPU
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
        python.dir: '/opt/python/cp35-cp35m'
      Python36:
        python.version: '3.6'
        python.dir: '/opt/python/cp36-cp36m'
      Python37:
        python.version: '3.7'
        python.dir: '/opt/python/cp36-cp36m'
  steps:
    - task: CmdLine@2
      inputs:
        script: |
          docker build -t onnxruntime-manylinux-$(python.version)  --build-arg BUILD_USER=onnxruntimedev --build-arg BUILD_UID=$(id -u) --build-arg PYTHON_VERSION=$(python.version) -f Dockerfile.manylinux1 .
        workingDirectory: $(Build.SourcesDirectory)/tools/ci_build/github/linux/docker
    - task: CmdLine@2
      inputs:
        script: |
          docker run --rm --volume $(Build.SourcesDirectory):/onnxruntime_src --volume $(Build.BinariesDirectory):/build -e NIGHTLY_BUILD onnxruntime-manylinux-$(python.version) $(python.dir)/bin/python3 /onnxruntime_src/tools/ci_build/build.py --build_dir /build --config Debug --skip_submodule_sync  --parallel --build_shared_lib --use_openmp --cmake_path /usr/bin/cmake --ctest_path /usr/bin/ctest --use_automl --build_wheel --cmake_extra_defines PYTHON_INCLUDE_DIR=$(python.dir)/include/python$(python.version)m PYTHON_LIBRARY=/usr/lib64/librt.so
        workingDirectory: $(Build.SourcesDirectory)

    - task: CopyFiles@2
      displayName: 'Copy Python Wheel to:  $(Build.ArtifactStagingDirectory)'
      inputs:
        SourceFolder: '$(Build.BinariesDirectory)'
        Contents: 'Release/dist/*-manylinux1_x86_64.whl'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: ONNXRuntime python wheel'
      inputs:
        ArtifactName: onnxruntime

    - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
      displayName: 'Component Detection'

    - template: templates/clean-agent-build-directory-step.yml
